{
  "sql":
  {
    "select":
    {
      "discipine_by_id": "SELECT * FROM Ref_Discipline WHERE id_disc = ?",
      "discipline_by_name": "SELECT * FROM Ref_Discipline WHERE discipline = ?",
      "event_by_teacher_id": "SELECT * FROM Evenement inner join Ref_Matiere ON Evenement.matiere = Ref_Matiere.id_mat Where Evenement.enseignant = ?",
      "all_absence_beetween_two_dates": "SELECT * FROM Absence INNER JOIN Evenement ON Evenement.heure_debut > ? AND Evenement.heure_fin < ? AND Absence.evenement = Evenement.id_ev",
      "event_by_date_and_classroom": "SELECT * FROM `Evenement` WHERE `heure_debut`=? AND `heure_fin`=? AND `classe`=? AND `salle`=?",
      "teacher_by_mail_password": "SELECT * FROM Enseignant WHERE mail = ? AND PASSWORD = ?",
      "teacher_by_mail": "SELECT * FROM Enseignant WHERE mail = ?",
      "teacher_random_number": "SELECT random_number FROM Identification WHERE enseignant = ?",
      "available_teacher": "SELECT * FROM Enseignant WHERE NOT EXISTS( SELECT 1 FROM Evenement WHERE Evenement.enseignant = Enseignant.id_ens AND( ( Evenement.heure_debut > ? AND Evenement.heure_debut < ? ) OR( Evenement.heure_fin > ? AND Evenement.heure_fin < ? ) ))",
      "identification_by_teacher_id_password": "SELECT * FROM Identification WHERE enseignant = ? AND mdp = ?",
      "teacher_profil": "SELECT * FROM Profil WHERE enseignant = ?",
      "course": "SELECT * FROM Ref_Matiere WHERE matiere = ?",
      "absence_available": "SELECT * FROM Absence INNER JOIN Evenement ON Absence.evenement = Evenement.id_ev INNER JOIN Enseignant ON Enseignant.id_ens = Evenement.enseignant",
      "discipline_by_nomenclature": "SELECT id_disc FROM Ref_Discipline WHERE nomenclature = ?",
      "courses_by_absence": "SELECT Evenement.matiere FROM Evenement INNER JOIN Absence ON Absence.evenement = Evenement.id_ev WHERE Absence.id_abs = ?",
      "teacher_by_discipline": "SELECT * FROM Correspondance WHERE enseignant = ? AND discipline = ?",
      "nomenclature_by_matiere": "SELECT nomenclature FROM Ref_Matiere WHERE id_mat = ?",
      "admin_by_mail_password": "SELECT * FROM Personnel_Administratif WHERE mail = ? AND password = ?",
      "unavailableTeacherByEtablishement": "SELECT * FROM Enseignant INNER JOIN Absence INNER JOIN Evenement ON Absence.evenement = Evenement.id_ev WHERE Enseignant.id_ens = Evenement.enseignant AND Enseignant.id_eta = ?",
      "diffusionByTeachers": "SELECT * FROM Diffusion WHERE enseignant = ?",
      "allProposedTeacher": "SELECT e.* FROM Enseignant e JOIN Proposition p ON e.id_ens = p.enseignant WHERE p.absence = ?"
    },
    "insert":
    {
      "event": "INSERT INTO Evenement (salle, date, heure_debut, heure_fin, classe, matiere, enseignant) VALUES (?,?,?,?,?,?,?)",
      "discipline": "INSERT IGNORE INTO Ref_Discipline (discipline) VALUES (?)",
      "absence": "INSERT INTO `Absence`(`motif`, `evenement`) VALUES (?, ?)",
      "teacher": "INSERT INTO `Enseignant` (mail, password, nom, prenom, random_number, valide) VALUES (?,?,?,?,?,?)",
      "identification": "INSERT INTO `Identification` (mdp, valide, random_number, enseignant) VALUES (?,?,?,?)",
      "profil": "INSERT INTO Profil (enseignant) values (?)",
      "proposition": "INSERT INTO `Proposition`(`enseignant`, `absence`) VALUES (?,?)",
      "remplacement": "INSERT INTO `Remplacement`(`horodatage_remp`, `enseignant`, `proposition`) VALUES (NULL,?,?)"
    },
    "update":
    {
      "teacher_validation": "UPDATE Identification SET valide = 1 WHERE enseignant = ?"
    }
  }
}